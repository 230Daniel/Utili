name: utili

services:

    postgres:
        container_name: utili-postgres
        image: postgres:16
        volumes:
            - './postgresql-data:/var/lib/postgresql/data'
        networks:
            - backend
        restart: unless-stopped
        environment:
            POSTGRES_USER: utili
            POSTGRES_PASSWORD: password
            POSTGRES_DB: utili

    bot:
        container_name: utili-bot
        image: 230daniel/utili-bot
        depends_on:
            - 'postgres'
        volumes:
            - './config/bot.json:/app/appsettings.json:ro'
            - './bot-logs:/app/logs'
        networks:
            - backend
        restart: unless-stopped
        logging:
            driver: "local"
            options:
                max-size: 50M

    backend:
        container_name: utili-backend
        image: 230daniel/utili-backend
        depends_on:
            - 'bot'
        volumes:
            - './config/backend.json:/app/appsettings.json:ro'
            - './aspnet-data:/root/.aspnet'
            - './backend-logs:/app/logs'
        networks:
            - backend
            - frontend
        restart: unless-stopped
        logging:
            driver: "local"
            options:
                max-size: 50M

    frontend:
        container_name: utili-frontend
        image: 230daniel/utili-frontend
        depends_on:
            - 'backend'
        volumes:
            - './config/frontend.js:/build/config.js:ro'
            - './config/nginx.conf:/etc/nginx/nginx.conf:ro'
            - '/etc/letsencrypt:/etc/letsencrypt:ro'
        networks:
            - frontend
        ports:
            - '443:443'
            - '80:80'
        restart: unless-stopped

networks:
    backend:
        driver: bridge
    frontend:
        driver: bridge
