@page
@using Database.Data
@model UtiliSite.Pages.Premium.SuccessModel
@{
    Layout = "Shared/_Layout.cshtml";

    List<SubscriptionsRow> subscriptions = (List<SubscriptionsRow>)ViewData["subscriptions"];
    ViewData["Title"] = "Thank you! - Utili Premium";
}

<div class="text-center text-white">
    <h1 class="display-4">Thank You!</h1>
    <p>Welcome to Utili Premium</p>
</div>

@if (subscriptions.Count > 0)
{
    int valid = subscriptions.Count(x => x.IsValid);
    int canceled = subscriptions.Count(x => x.Status == SubscriptionStatus.Canceled || x.Status == SubscriptionStatus.IncompleteExpired);
    int overdue = subscriptions.Count(x => x.Status == SubscriptionStatus.PastDue);
    int incomplete = subscriptions.Count(x => x.Status == SubscriptionStatus.Incomplete);
    int slots = subscriptions.Where(x => x.IsValid).Sum(x => x.Slots);

    <div class="divider">
        <div></div>
        <span>Your Subscriptions</span>
    </div>

    if (canceled > 0) { <span class="text-white">You have @canceled canceled @(canceled == 1 ? "subscription" : "subscriptions")</span> }
    if (overdue > 0) { <span class="text-danger">You have @overdue overdue @(overdue == 1 ? "subscription" : "subscriptions")</span> }
    if (incomplete > 0) { <span class="text-danger">You have @incomplete incomplete @(incomplete == 1 ? "subscription" : "subscriptions")</span> }
    <p class="text-white">You have @valid active @(valid == 1 ? "subscription" : "subscriptions") with a total of @slots premium server @(slots == 1 ? "slot" : "slots"). </p>
    if (slots > 0) { <a class="a-blue" href="@RedirectHelper.AddToUrl(ViewContext, "servers")">Select @(slots == 1 ? "server" : "servers") ➔</a> <br /> }
    <span class="a-blue" onclick="billingPortal()">Manage Billing ➔</span>
}