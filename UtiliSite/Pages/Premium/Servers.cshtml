@page
@using Database.Data;
@using Discord.Rest
@using System.Collections
@model UtiliSite.Pages.Premium.ManageModel
@{
    Layout = "Shared/_Layout.cshtml";
    ViewData["Title"] = "Servers - Utili Premium";

    if (ViewData["auth"] is null) { return; }

    List<SubscriptionsRow> subscriptions = (List<SubscriptionsRow>)ViewData["subscriptions"];
    List<PremiumRow> rows = (List<PremiumRow>)ViewData["rows"];
}

<div class="text-center text-white">
    <h1 class="display-4">Premium Servers</h1>
    <p style="margin-bottom: 40px;">Select a server for each of your premium slots</p>
</div>

@if (subscriptions.Count > 0)
{
    int valid = subscriptions.Count(x => x.IsValid);
    int canceled = subscriptions.Count(x => x.Status == SubscriptionStatus.Canceled || x.Status == SubscriptionStatus.IncompleteExpired);
    int overdue = subscriptions.Count(x => x.Status == SubscriptionStatus.PastDue);
    int incomplete = subscriptions.Count(x => x.Status == SubscriptionStatus.Incomplete);
    int slots = subscriptions.Where(x => x.IsValid).Sum(x => x.Slots);

    <div class="divider">
        <div></div>
        <span>Your Subscriptions</span>
    </div>

    if (canceled > 0) { <span class="text-white">You have @canceled canceled @(canceled == 1 ? "subscription" : "subscriptions")</span> }
    if (overdue > 0) { <span class="text-danger">You have @overdue overdue @(overdue == 1 ? "subscription" : "subscriptions")</span> }
    if (incomplete > 0) { <span class="text-danger">You have @incomplete incomplete @(incomplete == 1 ? "subscription" : "subscriptions")</span> }
    <p class="text-white">You have @valid active @(valid == 1 ? "subscription" : "subscriptions") with a total of @slots premium server @(slots == 1 ? "slot" : "slots"). </p>
    <span class="a-blue" onclick="billingPortal()">Manage Billing ➔</span>
}

<div class="divider">
    <div></div>
    <span>Server Slots</span>
</div>

<div class="row" style="display: flex;">
    @{
        int slot = 0;
    }
    @foreach (PremiumRow row in rows)
    {
        slot++;
        <div>
            <div class="col-md-12" style="padding-bottom: 30px;">
                <div class="card-container-3">
                    <form method="post">

                        <input type="hidden" name="slot" value="@row.SlotId"/>

                        <div class="input-group flex-nowrap">

                            <input type="text" class="form-control card-strong card-component-3 card-heading" value="Slot @slot" readonly>
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-1">Server</span>
                            <select class="custom-select card-component-2" name="guild">
                                <!option value="0" @(row.GuildId == 0 ? "selected" : "")>None</!option>
                                @foreach (RestUserGuild guild in ViewData["guilds"] as IEnumerable)
                                {
                                    <!option value="@guild.Id" @(row.GuildId == guild.Id ? "selected" : "")>
                                        @guild.Name
                                    </!option>
                                }
                            </select>
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2 card-strong"></span>
                            <button type="submit" class="btn  card-component-1 card-button card-strong">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
</div>