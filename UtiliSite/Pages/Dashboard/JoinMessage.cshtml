@page "{guild?}/joinmessage"
@using Database.Data
@using Discord.Rest
@model UtiliSite.Pages.Dashboard.JoinMessageModel
@{
    Layout = "Shared/_Layout.cshtml";
    ViewData["Title"] = "Join Message - Utili Dashboard";

    ViewData["heading"] = "Join Message";
    ViewData["subheading"] = "Send a message when a user joins the server\njoinmessage preview";
    ViewData["detailed"] = "Use ~newline~ to add a new line.\nUse %user% to @mention the user\nUse user as an image url to use the user's icon url.";

    JoinMessageRow row = (JoinMessageRow)ViewData["row"];
    List<RestTextChannel> channels = (List<RestTextChannel>)ViewData["channels"];
}

<div>
    <div class="card-container-7">
        <form method="post">

            <input type="text" class="form-control card-strong card-component-7 card-heading" value="Settings" readonly>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend card-component-2 input-group-text">Enabled</span>
                <div class="input-group-text card-component-5">
                    <input type="checkbox" name="enabled" class="form-control checkbox" @VoiceLinkModel.GetIsChecked(row.Enabled)>
                </div>
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Mode</span>
                <select class="custom-select card-component-5" name="direct">
                    <!option value="false" @JoinMessageModel.GetIsBoolSelected(false, row.Direct)>Send in channel</!option>
                    <!option value="true" @JoinMessageModel.GetIsBoolSelected(true, row.Direct)>Send in dm</!option>
                </select>
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Channel</span>
                <select class="custom-select card-component-5" name="channel">
                <!option value="0" @JoinMessageModel.GetIsIdSelected(0, row.ChannelId)>None</!option>
                @foreach (RestTextChannel channel in channels)
                {
                    <!option value="@channel.Id" @JoinMessageModel.GetIsIdSelected(channel.Id, row.ChannelId)>@channel.Name</!option>
                }
                </select>
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Title</span>
                <input type="text" name="title" class="form-control card-component-5" value="@row.Title.Value">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Content</span>
                <input type="text" name="content" class="form-control card-component-5" value="@row.Content.Value">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Footer</span>
                <input type="text" name="footer" class="form-control card-component-5" value="@row.Footer.Value">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Plain Text</span>
                <input type="text" name="text" class="form-control card-component-5" value="@row.Text.Value">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Image URL</span>
                <input type="text" name="image" class="form-control card-component-5" value="@row.Image.Value">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Thumbnail URL</span>
                <input type="text" name="thumbnail" class="form-control card-component-5" value="@row.Thumbnail.Value">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Icon URL</span>
                <input type="text" name="icon" class="form-control card-component-5" value="@row.Icon.Value">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2">Colour (hex)</span>
                <input type="text" name="colour" class="form-control card-component-5" value="@row.Colour.ToString()">
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-6 card-strong card-component-4"></span>
                <button type="submit" class="btn card-button card-component-1 card-strong">Save</button>
            </div>
        </form>
    </div>
</div>
