@page "{guild?}/roles"
@using Database.Data
@using Discord.Rest
@model UtiliSite.Pages.Dashboard.RolesModel
@{
    if (ViewData["guild"] == null) { return; }

    Layout = "Shared/_Layout.cshtml";
    ViewData["Title"] = "Roles - Utili Dashboard";

    ViewData["heading"] = "Roles";
    ViewData["subheading"] = "Enable role persist and set roles to give to users when they join";
    ViewData["detailed"] = "If role persist is enabled, a users roles will be recorded when they leave the server. These roles will be added back to them if they rejoin.\nJoin roles are given to any user when they join the server.";

    RolesRow row = (RolesRow)ViewData["row"];
    List<RestRole> joinRoles = (List<RestRole>)ViewData["joinRoles"];
    List<RestRole> nonjoinRoles = (List<RestRole>)ViewData["nonjoinRoles"];
}


<div>
    <div class="card-container-3">
        <form name="form-rolePersist" method="post">

            <input type="text" class="form-control card-component-3 card-heading card-strong" value="Settings" readonly>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-1">Role Persist</span>
                <div class="input-group-text card-component-2">
                    <input type="checkbox" name="rolePersist" class="form-control checkbox" @VoiceLinkModel.GetIsChecked(row.RolePersist)>
                </div>
            </div>

            <div class="input-group flex-nowrap">
                <span class="input-group-prepend input-group-text card-component-2 card-strong"></span>
                <button type="submit" class="btn  card-component-1 card-button card-strong">Save</button>
            </div>
        </form>
    </div>
</div>

<div class="dropdown belowcards">
    <button class="btn btn-secondary dropdown-toggle dropdown-200" type="button" data-toggle="dropdown" id="dropdownAddChannel" aria-haspopup="true" aria-expanded="false">
        Give role on join...
    </button>
    <div class="dropdown-menu dropdown-200-content noverticalpadding" aria-labelledby="dropdownExcludeChannel">
        @foreach (RestRole role in nonjoinRoles.Where(x => !x.IsEveryone).OrderBy(x => -x.Position))
        {
            <form method="post" name="noajax">
                <input type="hidden" name="role" value="@role.Id" />
                <button class="dropdown-item" asp-page-handler="AddJoinRole" type="submit">@role.Name</button>
            </form>
        }
    </div>
</div>

@foreach (RestRole role in joinRoles.Where(x => !x.IsEveryone).OrderBy(x => -x.Position))
{
    <div class="card-container-3">
        <form method="post">

            <input type="hidden" name="role" value="@role.Id" />

            <div class="input-group flex-nowrap">
                <input type="text" class="form-control input-group-text list-input text-left card-component-3 card-strong" value="@role.Name" readonly>
                <button type="submit" name="noajax" asp-page-handler="RemoveJoinRole" class="btn card-button-x card-strong">
                    <svg width="38px" height="38px" viewBox="0 0 16 16" class="bi bi-x" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                        <path transform="translate(0.4, 0)" fill-rule="evenodd" d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                    </svg>
                </button>
            </div>
        </form>
    </div>
}
