@page "{guild?}/notices"
@using Database.Data
@using Discord.Rest
@model UtiliSite.Pages.Dashboard.NoticesModel
@{
    Layout = "Shared/_Layout.cshtml";
    ViewData["Title"] = "Notices - Utili Dashboard";

    ViewData["heading"] = "Notices";
    ViewData["subheading"] = "Keeps a message at the bottom of a channel\nnotice preview";
    ViewData["detailed"] = "Use ~newline~ to add a new line.\nThe delay determines how long to wait until the notice is re-sent.";

    List<NoticesRow> rows = (List<NoticesRow>) ViewData["rows"];
    List<RestTextChannel> channels = (List<RestTextChannel>)ViewData["channels"];
    List<RestTextChannel> nonNoticeChannels = channels.Where(x => rows.All(y => y.ChannelId != x.Id)).OrderBy(x => x.Position).ToList();
}

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle dropdown-200" type="button" data-toggle="dropdown" id="dropdownAddChannel" aria-haspopup="true" aria-expanded="false">
        Add notice in...
    </button>
    <div class="dropdown-menu dropdown-200-content noverticalpadding" aria-labelledby="dropdownAddChannel">

        @foreach (RestTextChannel channel in nonNoticeChannels)
        {
            <form method="post" name="noajax">
                <input type="hidden" name="channel" value="@channel.Id" />
                <button class="dropdown-item" asp-page-handler="Add" type="submit">@channel.Name</button>
            </form>
        }

    </div>
</div>

<div class="row">
    @foreach (NoticesRow row in rows)
    {
        string channelName = channels.First(x => x.Id == row.ChannelId).Name;
        <div>
            <div class="col-md-12" style="padding-bottom: 30px;">
                <div class="card-container-7">
                    <form method="post">

                        <input type="hidden" name="channel" value="@row.ChannelId" />

                        <div class="input-group flex-nowrap">

                            <input type="text" class="form-control card-strong card-component-7 card-heading" value="@channelName" readonly>

                            <button type="submit" name="noajax" asp-page-handler="Remove" class="btn card-button-x card-strong">
                                <svg width="38px" height="38px" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path transform="translate(0.4, 0)" fill-rule="evenodd" d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                                </svg>
                            </button>

                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend card-component-2 input-group-text">Enabled</span>
                            <div class="input-group-text card-component-5">
                                <input type="checkbox" name="enabled" class="form-control checkbox" @VoiceLinkModel.GetIsChecked(row.Enabled)>
                            </div>
                        </div>
                        
                        <div class="input-group flex-nowrap" @Html.Raw(ContentHelper.Tooltip("dd:hh:mm:ss", "top"))>
                            <span class="input-group-prepend input-group-text card-component-2">Delay</span>
                            <input type="text" name="delay" class="form-control card-component-5" value="@row.Delay.ToStandardString()">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Title</span>
                            <input type="text" name="title" class="form-control card-component-5" value="@row.Title.Value">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Content</span>
                            <input type="text" name="content" class="form-control card-component-5" value="@row.Content.Value">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Footer</span>
                            <input type="text" name="footer" class="form-control card-component-5" value="@row.Footer.Value">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Plain Text</span>
                            <input type="text" name="text" class="form-control card-component-5" value="@row.Text.Value">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Image URL</span>
                            <input type="text" name="image" class="form-control card-component-5" value="@row.Image.Value">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Thumbnail URL</span>
                            <input type="text" name="thumbnail" class="form-control card-component-5" value="@row.Thumbnail.Value">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Icon URL</span>
                            <input type="text" name="icon" class="form-control card-component-5" value="@row.Icon.Value">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-2">Colour (hex)</span>
                            <input type="text" name="colour" class="form-control card-component-5" value="@row.Colour.ToString()">
                        </div>

                        <div class="input-group flex-nowrap">
                            <span class="input-group-prepend input-group-text card-component-6 card-strong card-component-4"></span>
                            <button type="submit" class="btn card-button card-component-1 card-strong">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
</div>
