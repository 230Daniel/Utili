worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events { }

http {
  include mime.types;

  server {
    server_name {DOMAIN};
    listen 443 ssl;

    ssl_certificate     /etc/letsencrypt/live/{DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{DOMAIN}/privkey.pem;

    # Serve the files in the /build directory
    root /build;
    location / {
       try_files $uri /index.html;
    }

    # Forward traffic on /signin-discord to the backend container
    # This is required due to poor design of the Discord authentication provider
    # (or my inability to configure it properly)
    location /signin-discord {
      proxy_pass         http://backend:80/signin-discord;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection keep-alive;
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   X-Real-IP $remote_addr;
    }

    # Forward traffic on /api/ to the backend container
    location /api/ {
      proxy_pass         http://backend:80/;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection keep-alive;
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   X-Real-IP $remote_addr;
    }
  }

  # Redirect HTTP requests to HTTPS
  server {
    server_name {DOMAIN};
    listen 80;

    location / {
      return 301 https://$host$request_uri;
    }
  }
}
