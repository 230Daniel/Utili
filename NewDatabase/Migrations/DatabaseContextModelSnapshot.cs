// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewDatabase;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NewDatabase.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("NewDatabase.Entities.AutopurgeConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<int>("Mode")
                        .HasColumnType("integer")
                        .HasColumnName("mode");

                    b.Property<TimeSpan>("Timespan")
                        .HasColumnType("interval")
                        .HasColumnName("timespan");

                    b.HasKey("GuildId", "ChannelId")
                        .HasName("pk_autopurge_configurations");

                    b.ToTable("autopurge_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.AutopurgeMessage", b =>
                {
                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("message_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<bool>("IsBot")
                        .HasColumnType("boolean")
                        .HasColumnName("is_bot");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("boolean")
                        .HasColumnName("is_pinned");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("timestamp");

                    b.HasKey("MessageId")
                        .HasName("pk_autopurge_messages");

                    b.ToTable("autopurge_messages");
                });

            modelBuilder.Entity("NewDatabase.Entities.CoreConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<bool>("CommandsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("commands_enabled");

                    b.Property<decimal[]>("NonCommandChannels")
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("non_command_channels");

                    b.Property<string>("Prefix")
                        .HasColumnType("text")
                        .HasColumnName("prefix");

                    b.HasKey("GuildId")
                        .HasName("pk_core_configurations");

                    b.ToTable("core_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.InactiveRoleConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<bool>("AutoKick")
                        .HasColumnType("boolean")
                        .HasColumnName("auto_kick");

                    b.Property<TimeSpan>("AutoKickThreshold")
                        .HasColumnType("interval")
                        .HasColumnName("auto_kick_threshold");

                    b.Property<DateTime>("DefaultLastAction")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("default_last_action");

                    b.Property<decimal>("ImmuneRoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("immune_role_id");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_update");

                    b.Property<int>("Mode")
                        .HasColumnType("integer")
                        .HasColumnName("mode");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("role_id");

                    b.Property<TimeSpan>("Threshold")
                        .HasColumnType("interval")
                        .HasColumnName("threshold");

                    b.HasKey("GuildId")
                        .HasName("pk_inactive_role_configurations");

                    b.ToTable("inactive_role_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.JoinMessageConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<long>("Colour")
                        .HasColumnType("bigint")
                        .HasColumnName("colour");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean")
                        .HasColumnName("enabled");

                    b.Property<string>("Footer")
                        .HasColumnType("text")
                        .HasColumnName("footer");

                    b.Property<string>("Icon")
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<int>("Mode")
                        .HasColumnType("integer")
                        .HasColumnName("mode");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text")
                        .HasColumnName("thumbnail");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("GuildId")
                        .HasName("pk_join_message_configurations");

                    b.ToTable("join_message_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.JoinRolesConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal[]>("JoinRoles")
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("join_roles");

                    b.Property<bool>("WaitForVerification")
                        .HasColumnType("boolean")
                        .HasColumnName("wait_for_verification");

                    b.HasKey("GuildId")
                        .HasName("pk_join_roles_configurations");

                    b.ToTable("join_roles_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.JoinRolesPendingMember", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("MemberId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("member_id");

                    b.Property<bool>("IsPending")
                        .HasColumnType("boolean")
                        .HasColumnName("is_pending");

                    b.Property<DateTime>("ScheduledFor")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("scheduled_for");

                    b.HasKey("GuildId", "MemberId")
                        .HasName("pk_join_roles_pending_members");

                    b.ToTable("join_roles_pending_members");
                });

            modelBuilder.Entity("NewDatabase.Entities.MessageFilterConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<int>("Mode")
                        .HasColumnType("integer")
                        .HasColumnName("mode");

                    b.Property<string>("RegEx")
                        .HasColumnType("text")
                        .HasColumnName("reg_ex");

                    b.HasKey("GuildId", "ChannelId")
                        .HasName("pk_message_filter_configurations");

                    b.ToTable("message_filter_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.MessageLogsConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("DeletedChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("deleted_channel_id");

                    b.Property<decimal>("EditedChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("edited_channel_id");

                    b.Property<decimal[]>("ExcludedChannels")
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("excluded_channels");

                    b.HasKey("GuildId")
                        .HasName("pk_message_logs_configurations");

                    b.ToTable("message_logs_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.MessageLogsMessage", b =>
                {
                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("message_id");

                    b.Property<decimal>("AuthorId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("author_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("timestamp");

                    b.HasKey("MessageId")
                        .HasName("pk_message_logs_messages");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("ix_message_logs_messages_timestamp");

                    b.ToTable("message_logs_messages");
                });

            modelBuilder.Entity("NewDatabase.Entities.MessagePinningConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("PinChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("pin_channel_id");

                    b.Property<bool>("PinMessages")
                        .HasColumnType("boolean")
                        .HasColumnName("pin_messages");

                    b.HasKey("GuildId")
                        .HasName("pk_message_pinning_configurations");

                    b.ToTable("message_pinning_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.MessagePinningWebhook", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<decimal>("WebhookId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("webhook_id");

                    b.HasKey("GuildId", "ChannelId")
                        .HasName("pk_message_pinning_webhooks");

                    b.ToTable("message_pinning_webhooks");
                });
#pragma warning restore 612, 618
        }
    }
}
