// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewDatabase;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NewDatabase.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("NewDatabase.Entities.AutopurgeConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<int>("Mode")
                        .HasColumnType("integer")
                        .HasColumnName("mode");

                    b.Property<TimeSpan>("Timespan")
                        .HasColumnType("interval")
                        .HasColumnName("timespan");

                    b.HasKey("GuildId", "ChannelId")
                        .HasName("pk_autopurge_configurations");

                    b.ToTable("autopurge_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.AutopurgeMessage", b =>
                {
                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("message_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<bool>("IsBot")
                        .HasColumnType("boolean")
                        .HasColumnName("is_bot");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("boolean")
                        .HasColumnName("is_pinned");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("timestamp");

                    b.HasKey("MessageId")
                        .HasName("pk_autopurge_messages");

                    b.ToTable("autopurge_messages");
                });

            modelBuilder.Entity("NewDatabase.Entities.CoreConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<bool>("CommandsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("commands_enabled");

                    b.Property<decimal[]>("NonCommandChannels")
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("non_command_channels");

                    b.Property<string>("Prefix")
                        .HasColumnType("text")
                        .HasColumnName("prefix");

                    b.HasKey("GuildId")
                        .HasName("pk_core_configurations");

                    b.ToTable("core_configurations");
                });

            modelBuilder.Entity("NewDatabase.Entities.InactiveRoleConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<bool>("AutoKick")
                        .HasColumnType("boolean")
                        .HasColumnName("auto_kick");

                    b.Property<TimeSpan>("AutoKickThreshold")
                        .HasColumnType("interval")
                        .HasColumnName("auto_kick_threshold");

                    b.Property<DateTime>("DefaultLastAction")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("default_last_action");

                    b.Property<decimal>("ImmuneRoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("immune_role_id");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_update");

                    b.Property<int>("Mode")
                        .HasColumnType("integer")
                        .HasColumnName("mode");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("role_id");

                    b.Property<TimeSpan>("Threshold")
                        .HasColumnType("interval")
                        .HasColumnName("threshold");

                    b.HasKey("GuildId")
                        .HasName("pk_inactive_role_configurations");

                    b.ToTable("inactive_role_configurations");
                });
#pragma warning restore 612, 618
        }
    }
}
